$date
	Fri Apr 18 07:50:22 2025
$end
$version
	ModelSim Version 2020.4
$end
$timescale
	1ns
$end

$scope module hazard_unit_tb $end
$var reg 1 ! rst $end
$var reg 1 " RegWriteM $end
$var reg 1 # RegWriteW $end
$var reg 5 $ RD_M [4:0] $end
$var reg 5 % RD_W [4:0] $end
$var reg 5 & Rs1_E [4:0] $end
$var reg 5 ' Rs2_E [4:0] $end
$var wire 1 ( ForwardAE [1] $end
$var wire 1 ) ForwardAE [0] $end
$var wire 1 * ForwardBE [1] $end
$var wire 1 + ForwardBE [0] $end

$scope module DUT $end
$var wire 1 , rst $end
$var wire 1 - RegWriteM $end
$var wire 1 . RegWriteW $end
$var wire 1 / RD_M [4] $end
$var wire 1 0 RD_M [3] $end
$var wire 1 1 RD_M [2] $end
$var wire 1 2 RD_M [1] $end
$var wire 1 3 RD_M [0] $end
$var wire 1 4 RD_W [4] $end
$var wire 1 5 RD_W [3] $end
$var wire 1 6 RD_W [2] $end
$var wire 1 7 RD_W [1] $end
$var wire 1 8 RD_W [0] $end
$var wire 1 9 Rs1_E [4] $end
$var wire 1 : Rs1_E [3] $end
$var wire 1 ; Rs1_E [2] $end
$var wire 1 < Rs1_E [1] $end
$var wire 1 = Rs1_E [0] $end
$var wire 1 > Rs2_E [4] $end
$var wire 1 ? Rs2_E [3] $end
$var wire 1 @ Rs2_E [2] $end
$var wire 1 A Rs2_E [1] $end
$var wire 1 B Rs2_E [0] $end
$var wire 1 ( ForwardAE [1] $end
$var wire 1 ) ForwardAE [0] $end
$var wire 1 * ForwardBE [1] $end
$var wire 1 + ForwardBE [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
b0 $
b0 %
b0 &
b0 '
0)
0(
0+
0*
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
$end
#100
1!
b1 &
b10 '
1,
1A
1=
#200
1"
b1 $
1-
13
1(
#300
0"
1#
b10 %
0-
1.
17
0(
1+
#400
1"
0#
b11 $
b11 &
b11 '
1-
0.
1B
1<
12
1(
0+
1*
#500
0!
0,
0(
0*
